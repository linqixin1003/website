#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Âº∫Âà∂‰øÑËØ≠ÁøªËØëËÑöÊú¨ - ‰ΩøÁî®Ê≠£ÂàôË°®ËææÂºèÂ§ÑÁêÜÊâÄÊúâËã±ÊñáÂÜÖÂÆπ
"""

import os
import re
from pathlib import Path

def force_translate_file(file_path):
    """Âº∫Âà∂ÁøªËØëÊñá‰ª∂‰∏≠ÁöÑÊâÄÊúâËã±ÊñáÂÜÖÂÆπ"""
    print(f"Âº∫Âà∂ÁøªËØëÊñá‰ª∂: {file_path}")
    
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # ‰ΩøÁî®Ê≠£ÂàôË°®ËææÂºèÊõøÊç¢ÊâÄÊúâËã±ÊñáÂÜÖÂÆπ
        replacements = [
            # HTMLÊ†áÁ≠æÂÜÖÁöÑËã±Êñá
            (r'<div class="stat-label">Noise Level</div>', r'<div class="stat-label">–£—Ä–æ–≤–µ–Ω—å —à—É–º–∞</div>'),
            (r'<div class="stat-label">Care Level</div>', r'<div class="stat-label">–£—Ä–æ–≤–µ–Ω—å —É—Ö–æ–¥–∞</div>'),
            (r'<div class="stat-value">([^<]*)</div>', lambda m: f'<div class="stat-value">{translate_value(m.group(1))}</div>'),
            (r'<div class="section-title">([^<]*)</div>', lambda m: f'<div class="section-title">{translate_section_title(m.group(1))}</div>'),
            (r'<div class="tip-title">([^<]*)</div>', lambda m: f'<div class="tip-title">{translate_tip_title(m.group(1))}</div>'),
            
            # Âº∫Ê†áÁ≠æÂÜÖÁöÑËã±Êñá
            (r'<strong>Care Level:</strong>', r'<strong>–£—Ä–æ–≤–µ–Ω—å —É—Ö–æ–¥–∞:</strong>'),
            (r'<strong>Noise Level:</strong>', r'<strong>–£—Ä–æ–≤–µ–Ω—å —à—É–º–∞:</strong>'),
            (r'<strong>Personality:</strong>', r'<strong>–õ–∏—á–Ω–æ—Å—Ç—å:</strong>'),
            (r'<strong>Experience Level Matching:</strong>', r'<strong>–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —É—Ä–æ–≤–Ω—é –æ–ø—ã—Ç–∞:</strong>'),
            (r'<strong>Advanced Foraging Challenges:</strong>', r'<strong>–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤—ã–∑–æ–≤—ã –ø–æ–∏—Å–∫–∞ –ø–∏—â–∏:</strong>'),
            (r'<strong>Large Birds \(Macaws, African Greys\):</strong>', r'<strong>–ö—Ä—É–ø–Ω—ã–µ –ø—Ç–∏—Ü—ã (–∞—Ä–∞, –∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ —Å–µ—Ä—ã–µ):</strong>'),
            
            # ÂàóË°®È°π
            (r'‚Ä¢ Beginners: Budgies, canaries, cockatiels', r'‚Ä¢ –ù–∞—á–∏–Ω–∞—é—â–∏–µ: –≤–æ–ª–Ω–∏—Å—Ç—ã–µ –ø–æ–ø—É–≥–∞–π—á–∏–∫–∏, –∫–∞–Ω–∞—Ä–µ–π–∫–∏, –∫–æ—Ä–µ–ª–ª—ã'),
            (r'‚Ä¢ Intermediate: Lovebirds, small conures, parrotlets', r'‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å: –Ω–µ—Ä–∞–∑–ª—É—á–Ω–∏–∫–∏, –º–∞–ª–µ–Ω—å–∫–∏–µ –∫–æ–Ω—É—Ä—ã, –ø–æ–ø—É–≥–∞–π—á–∏–∫–∏'),
            (r'‚Ä¢ Advanced: Large conures, small macaws, amazons', r'‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π: –∫—Ä—É–ø–Ω—ã–µ –∫–æ–Ω—É—Ä—ã, –º–∞–ª–µ–Ω—å–∫–∏–µ –∞—Ä–∞, –∞–º–∞–∑–æ–Ω—ã'),
            (r'‚Ä¢ Expert: African greys, large macaws, cockatoos', r'‚Ä¢ –≠–∫—Å–ø–µ—Ä—Ç: –∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ —Å–µ—Ä—ã–µ, –∫—Ä—É–ø–Ω—ã–µ –∞—Ä–∞, –∫–∞–∫–∞–¥—É'),
            (r'‚Ä¢ Consider starting smaller and working up', r'‚Ä¢ –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å —Å –º–µ–Ω—å—à–∏—Ö –∏ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å—Å—è –≤–≤–µ—Ä—Ö'),
            (r'‚Ä¢ Multi-level puzzle feeders', r'‚Ä¢ –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –∫–æ—Ä–º—É—à–∫–∏-–≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏'),
            (r'‚Ä¢ Advanced problem-solving puzzles', r'‚Ä¢ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º'),
            (r'‚Ä¢ Large foraging opportunities', r'‚Ä¢ –ë–æ–ª—å—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∏—â–∏'),
            
            # ÊèèËø∞ÊñáÊú¨
            (r"Perfect for first-time bird owners\. They're social, relatively quiet, and can learn simple words and tricks\.", 
             r"–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –ø—Ç–∏—Ü. –û–Ω–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–∏—Ö–∏ –∏ –º–æ–≥—É—Ç –≤—ã—É—á–∏—Ç—å –ø—Ä–æ—Å—Ç—ã–µ —Å–ª–æ–≤–∞ –∏ —Ç—Ä—é–∫–∏."),
            (r"Known for their distinctive crest and gentle nature\. They're excellent whistlers and can learn melodies\.", 
             r"–ò–∑–≤–µ—Å—Ç–Ω—ã —Å–≤–æ–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º —Ö–æ—Ö–æ–ª–∫–æ–º –∏ –Ω–µ–∂–Ω—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º. –û–Ω–∏ –æ—Ç–ª–∏—á–Ω—ã–µ —Å–≤–∏—Å—Ç—É–Ω—ã –∏ –º–æ–≥—É—Ç –≤—ã—É—á–∏—Ç—å –º–µ–ª–æ–¥–∏–∏."),
            (r"Colorful and energetic birds that do well in pairs\. They're active and require plenty of toys and stimulation\.", 
             r"–ö—Ä–∞—Å–æ—á–Ω—ã–µ –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–µ –ø—Ç–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ä–æ—à–æ –∂–∏–≤—É—Ç –ø–∞—Ä–∞–º–∏. –û–Ω–∏ –∞–∫—Ç–∏–≤–Ω—ã –∏ —Ç—Ä–µ–±—É—é—Ç –º–Ω–æ–≥–æ –∏–≥—Ä—É—à–µ–∫ –∏ —Å—Ç–∏–º—É–ª—è—Ü–∏–∏."),
            (r"Beautiful singers that don't require as much social interaction\. Perfect for those who enjoy bird songs\.", 
             r"–ö—Ä–∞—Å–∏–≤—ã–µ –ø–µ–≤—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç —Å—Ç–æ–ª—å–∫–æ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–∞–µ—Ç—Å—è –ø—Ç–∏—á—å–∏–º–∏ –ø–µ—Å–Ω—è–º–∏."),
            (r"Colorful, playful birds with big personalities\. They can be quite loud and require experienced owners\.", 
             r"–ö—Ä–∞—Å–æ—á–Ω—ã–µ, –∏–≥—Ä–∏–≤—ã–µ –ø—Ç–∏—Ü—ã —Å –±–æ–ª—å—à–∏–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏. –û–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–≤–æ–ª—å–Ω–æ –≥—Ä–æ–º–∫–∏–º–∏ –∏ —Ç—Ä–µ–±—É—é—Ç –æ–ø—ã—Ç–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤."),
            (r"Extremely intelligent birds that require experienced owners and consistent mental stimulation\.", 
             r"–ß—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ —É–º–Ω—ã–µ –ø—Ç–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –æ–ø—ã—Ç–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —É–º—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ç–∏–º—É–ª—è—Ü–∏–∏."),
            
            # ÊèêÁ§∫ÂÜÖÂÆπ
            (r"Focus on size and shape first, notice behavior patterns, listen to sounds, use size comparisons, and always take notes of what you observe\.", 
             r"–°–Ω–∞—á–∞–ª–∞ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Ä–∞–∑–º–µ—Ä–µ –∏ —Ñ–æ—Ä–º–µ, –∑–∞–º–µ—á–∞–π—Ç–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã, —Å–ª—É—à–∞–π—Ç–µ –∑–≤—É–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –≤—Å–µ–≥–¥–∞ –¥–µ–ª–∞–π—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–±–ª—é–¥–∞–µ—Ç–µ."),
        ]
        
        # Â∫îÁî®ÊâÄÊúâÊõøÊç¢
        for pattern, replacement in replacements:
            if callable(replacement):
                content = re.sub(pattern, replacement, content)
            else:
                content = re.sub(pattern, replacement, content)
        
        # Â¶ÇÊûúÊúâÂèòÂåñÔºå‰øùÂ≠òÊñá‰ª∂
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"‚úÖ Âº∫Âà∂ÁøªËØëÂÆåÊàê: {file_path}")
            return True
        else:
            print(f"‚è≠Ô∏è  Êó†ÈúÄÁøªËØë: {file_path}")
            return False
            
    except Exception as e:
        print(f"‚ùå Âº∫Âà∂ÁøªËØëÊñá‰ª∂ {file_path} Êó∂Âá∫Èîô: {e}")
        return False

def translate_value(value):
    """ÁøªËØëstat-value‰∏≠ÁöÑÂÄº"""
    translations = {
        'Low-Moderate': '–ù–∏–∑–∫–∏–π-–°—Ä–µ–¥–Ω–∏–π',
        'Moderate': '–°—Ä–µ–¥–Ω–∏–π',
        'Moderate-High': '–°—Ä–µ–¥–Ω–∏–π-–í—ã—Å–æ–∫–∏–π',
        'Very High': '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π',
        'High': '–í—ã—Å–æ–∫–∏–π',
        'Low': '–ù–∏–∑–∫–∏–π',
        'Beginner': '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
        'Intermediate': '–°—Ä–µ–¥–Ω–∏–π',
        'Advanced': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
        'Expert': '–≠–∫—Å–ø–µ—Ä—Ç',
        'Beginner-friendly': '–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
        'Low to moderate': '–û—Ç –Ω–∏–∑–∫–æ–≥–æ –¥–æ —Å—Ä–µ–¥–Ω–µ–≥–æ',
        'Moderate to high': '–û—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–æ –≤—ã—Å–æ–∫–æ–≥–æ',
        'Intermediate to advanced': '–û—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ',
    }
    return translations.get(value.strip(), value)

def translate_section_title(title):
    """ÁøªËØëÁ´†ËäÇÊ†áÈ¢ò"""
    translations = {
        'Intermediate Species': '–í–∏–¥—ã —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è',
        'Advanced Species': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–∏–¥—ã',
        'Beginner-Friendly Species': '–í–∏–¥—ã –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
        'Advanced Techniques': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏',
        'Understanding Bird Aging': '–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Å—Ç–∞—Ä–µ–Ω–∏—è –ø—Ç–∏—Ü',
        'Common Age-Related Health Issues': '–†–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º',
        'Environmental Modifications': '–ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã',
        'Nutritional Needs for Senior Birds': '–ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ –ø–∏—Ç–∞–Ω–∏–∏ –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö –ø—Ç–∏—Ü',
        'Veterinary Care for Senior Birds': '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–∞—è –ø–æ–º–æ—â—å –¥–ª—è –ø–æ–∂–∏–ª—ã—Ö –ø—Ç–∏—Ü',
        'Mental and Social Needs': '–ü—Å–∏—Ö–∏—á–µ—Å–∫–∏–µ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏',
        'End-of-Life Considerations': '–°–æ–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω—Ü–∞ –∂–∏–∑–Ω–∏',
        'Supporting Senior Bird Owners': '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –ø–æ–∂–∏–ª—ã—Ö –ø—Ç–∏—Ü',
        'Understanding Bird Enrichment Needs': '–ü–æ–Ω–∏–º–∞–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –ø—Ç–∏—Ü –≤ –æ–±–æ–≥–∞—â–µ–Ω–∏–∏',
        'Foraging Activities': '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞ –ø–∏—â–∏',
        'DIY Toy Projects': '–ü—Ä–æ–µ–∫—Ç—ã –∏–≥—Ä—É—à–µ–∫ —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏',
    }
    return translations.get(title.strip(), title)

def translate_tip_title(title):
    """ÁøªËØëÊèêÁ§∫Ê†áÈ¢ò"""
    translations = {
        'üí° Learning Tips for Beginners': 'üí° –°–æ–≤–µ—Ç—ã –ø–æ –æ–±—É—á–µ–Ω–∏—é –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
        'üè† Visit Before You Decide': 'üè† –ü–æ—Å–µ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º —Ä–µ—à–µ–Ω–∏—è',
        'üõèÔ∏è Comfort First': 'üõèÔ∏è –ö–æ–º—Ñ–æ—Ä—Ç –ø—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ',
    }
    return translations.get(title.strip(), title)

def main():
    """‰∏ªÂáΩÊï∞"""
    print("ÂºÄÂßãÂº∫Âà∂‰øÑËØ≠ÁøªËØë...")
    
    # Ëé∑ÂèñruÁõÆÂΩï‰∏ãÁöÑÊâÄÊúâHTMLÊñá‰ª∂
    ru_dir = Path("ru")
    if not ru_dir.exists():
        print("‚ùå ruÁõÆÂΩï‰∏çÂ≠òÂú®!")
        return
    
    html_files = list(ru_dir.rglob("*.html"))
    
    if not html_files:
        print("‚ùå Âú®ruÁõÆÂΩï‰∏ãÊ≤°ÊúâÊâæÂà∞HTMLÊñá‰ª∂!")
        return
    
    print(f"ÊâæÂà∞ {len(html_files)} ‰∏™HTMLÊñá‰ª∂")
    
    # Â§ÑÁêÜÊØè‰∏™Êñá‰ª∂
    processed_count = 0
    for file_path in html_files:
        if force_translate_file(file_path):
            processed_count += 1
    
    print(f"\n‚úÖ Âº∫Âà∂ÁøªËØëÂÆåÊàê! ÂÖ±Â§ÑÁêÜ‰∫Ü {len(html_files)} ‰∏™Êñá‰ª∂Ôºå‰øÆÊîπ‰∫Ü {processed_count} ‰∏™Êñá‰ª∂")

if __name__ == "__main__":
    main()