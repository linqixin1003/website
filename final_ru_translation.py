#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ÊúÄÁªà‰øÑËØ≠ÁøªËØëËÑöÊú¨ - Â§ÑÁêÜruÁõÆÂΩï‰∏ãÊâÄÊúâÂâ©‰ΩôÁöÑËã±ÊñáÂÜÖÂÆπ
"""

import os
import re
from pathlib import Path

# ÊúÄÁªàÁøªËØëÂ≠óÂÖ∏ - ÂåÖÂê´ÊâÄÊúâÂâ©‰ΩôÁöÑËã±ÊñáÂÜÖÂÆπ
FINAL_TRANSLATIONS = {
    # HTMLÊ†áÁ≠æÂÜÖÂÆπ
    'stat-label">Noise Level': 'stat-label">–£—Ä–æ–≤–µ–Ω—å —à—É–º–∞',
    'stat-label">Care Level': 'stat-label">–£—Ä–æ–≤–µ–Ω—å —É—Ö–æ–¥–∞',
    'stat-value">Low-Moderate': 'stat-value">–ù–∏–∑–∫–∏–π-–°—Ä–µ–¥–Ω–∏–π',
    'stat-value">Moderate': 'stat-value">–°—Ä–µ–¥–Ω–∏–π',
    'stat-value">Moderate-High': 'stat-value">–°—Ä–µ–¥–Ω–∏–π-–í—ã—Å–æ–∫–∏–π',
    'stat-value">Very High': 'stat-value">–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π',
    'stat-value">High': 'stat-value">–í—ã—Å–æ–∫–∏–π',
    'stat-value">Low': 'stat-value">–ù–∏–∑–∫–∏–π',
    'stat-value">Beginner': 'stat-value">–ù–∞—á–∏–Ω–∞—é—â–∏–π',
    'stat-value">Intermediate': 'stat-value">–°—Ä–µ–¥–Ω–∏–π',
    'stat-value">Advanced': 'stat-value">–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
    'stat-value">Expert': 'stat-value">–≠–∫—Å–ø–µ—Ä—Ç',
    'stat-value">Beginner-friendly': 'stat-value">–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
    'stat-value">Low to moderate': 'stat-value">–û—Ç –Ω–∏–∑–∫–æ–≥–æ –¥–æ —Å—Ä–µ–¥–Ω–µ–≥–æ',
    'stat-value">Moderate to high': 'stat-value">–û—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–æ –≤—ã—Å–æ–∫–æ–≥–æ',
    'stat-value">Intermediate to advanced': 'stat-value">–û—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ',
    
    # Âü∫Êú¨ËØçÊ±á
    'Care Level:': '–£—Ä–æ–≤–µ–Ω—å —É—Ö–æ–¥–∞:',
    'Noise Level:': '–£—Ä–æ–≤–µ–Ω—å —à—É–º–∞:',
    'Care Level': '–£—Ä–æ–≤–µ–Ω—å —É—Ö–æ–¥–∞',
    'Noise Level': '–£—Ä–æ–≤–µ–Ω—å —à—É–º–∞',
    'Beginner': '–ù–∞—á–∏–Ω–∞—é—â–∏–π',
    'Intermediate': '–°—Ä–µ–¥–Ω–∏–π',
    'Advanced': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π',
    'Expert': '–≠–∫—Å–ø–µ—Ä—Ç',
    'Beginner-friendly': '–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
    'Low-Moderate': '–ù–∏–∑–∫–∏–π-–°—Ä–µ–¥–Ω–∏–π',
    'Moderate': '–°—Ä–µ–¥–Ω–∏–π',
    'Moderate-High': '–°—Ä–µ–¥–Ω–∏–π-–í—ã—Å–æ–∫–∏–π',
    'Very High': '–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π',
    'High': '–í—ã—Å–æ–∫–∏–π',
    'Low': '–ù–∏–∑–∫–∏–π',
    'Low to moderate': '–û—Ç –Ω–∏–∑–∫–æ–≥–æ –¥–æ —Å—Ä–µ–¥–Ω–µ–≥–æ',
    'Moderate to high': '–û—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–æ –≤—ã—Å–æ–∫–æ–≥–æ',
    'Intermediate to advanced': '–û—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –¥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ',
    'Beginner to intermediate': '–û—Ç –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ –¥–æ —Å—Ä–µ–¥–Ω–µ–≥–æ',
    
    # Á´†ËäÇÊ†áÈ¢ò
    'section-title">Advanced Techniques': 'section-title">–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏',
    'section-title">Intermediate Species': 'section-title">–í–∏–¥—ã —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è',
    'section-title">Advanced Species': 'section-title">–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–∏–¥—ã',
    'section-title">Beginner-Friendly Species': 'section-title">–í–∏–¥—ã –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
    'section-title">Choosing the Right Species': 'section-title">–í—ã–±–æ—Ä –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –≤–∏–¥–∞',
    
    # ÊèêÁ§∫Ê°ÜÊ†áÈ¢ò
    'tip-title">üí° Learning Tips for Beginners': 'tip-title">üí° –°–æ–≤–µ—Ç—ã –ø–æ –æ–±—É—á–µ–Ω–∏—é –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
    
    # Êä§ÁêÜË¶ÅÊ±Ç
    'care-title">Care Requirements:': 'care-title">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ —É—Ö–æ–¥—É:',
    'care-title">Care Requirements': 'care-title">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ —É—Ö–æ–¥—É',
    
    # ‰∏™ÊÄßÊèèËø∞
    'Personality:': '–õ–∏—á–Ω–æ—Å—Ç—å:',
    'Social, playful, can learn to talk': '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ, –∏–≥—Ä–∏–≤—ã–µ, –º–æ–≥—É—Ç –Ω–∞—É—á–∏—Ç—å—Å—è –≥–æ–≤–æ—Ä–∏—Ç—å',
    'Gentle, affectionate, whistlers': '–ù–µ–∂–Ω—ã–µ, –ª–∞—Å–∫–æ–≤—ã–µ, —Å–≤–∏—Å—Ç—É–Ω—ã',
    'Energetic, playful, can be territorial': '–≠–Ω–µ—Ä–≥–∏—á–Ω—ã–µ, –∏–≥—Ä–∏–≤—ã–µ, –º–æ–≥—É—Ç –±—ã—Ç—å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω—ã–º–∏',
    'Independent, excellent singers': '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ, –æ—Ç–ª–∏—á–Ω—ã–µ –ø–µ–≤—Ü—ã',
    'Playful, loud, affectionate': '–ò–≥—Ä–∏–≤—ã–µ, –≥—Ä–æ–º–∫–∏–µ, –ª–∞—Å–∫–æ–≤—ã–µ',
    'Highly intelligent, can be sensitive': '–û—á–µ–Ω—å —É–º–Ω—ã–µ, –º–æ–≥—É—Ç –±—ã—Ç—å —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏',
    
    # ÊèèËø∞ÊñáÊú¨
    "Perfect for first-time bird owners. They're social, relatively quiet, and can learn simple words and tricks.": "–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –ø—Ç–∏—Ü. –û–Ω–∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç–∏—Ö–∏ –∏ –º–æ–≥—É—Ç –≤—ã—É—á–∏—Ç—å –ø—Ä–æ—Å—Ç—ã–µ —Å–ª–æ–≤–∞ –∏ —Ç—Ä—é–∫–∏.",
    "Known for their distinctive crest and gentle nature. They're excellent whistlers and can learn melodies.": "–ò–∑–≤–µ—Å—Ç–Ω—ã —Å–≤–æ–∏–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–º —Ö–æ—Ö–æ–ª–∫–æ–º –∏ –Ω–µ–∂–Ω—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º. –û–Ω–∏ –æ—Ç–ª–∏—á–Ω—ã–µ —Å–≤–∏—Å—Ç—É–Ω—ã –∏ –º–æ–≥—É—Ç –≤—ã—É—á–∏—Ç—å –º–µ–ª–æ–¥–∏–∏.",
    "Colorful and energetic birds that do well in pairs. They're active and require plenty of toys and stimulation.": "–ö—Ä–∞—Å–æ—á–Ω—ã–µ –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–µ –ø—Ç–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ä–æ—à–æ –∂–∏–≤—É—Ç –ø–∞—Ä–∞–º–∏. –û–Ω–∏ –∞–∫—Ç–∏–≤–Ω—ã –∏ —Ç—Ä–µ–±—É—é—Ç –º–Ω–æ–≥–æ –∏–≥—Ä—É—à–µ–∫ –∏ —Å—Ç–∏–º—É–ª—è—Ü–∏–∏.",
    "Beautiful singers that don't require as much social interaction. Perfect for those who enjoy bird songs.": "–ö—Ä–∞—Å–∏–≤—ã–µ –ø–µ–≤—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Ç—Ä–µ–±—É—é—Ç —Å—Ç–æ–ª—å–∫–æ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –Ω–∞—Å–ª–∞–∂–¥–∞–µ—Ç—Å—è –ø—Ç–∏—á—å–∏–º–∏ –ø–µ—Å–Ω—è–º–∏.",
    "Colorful, playful birds with big personalities. They can be quite loud and require experienced owners.": "–ö—Ä–∞—Å–æ—á–Ω—ã–µ, –∏–≥—Ä–∏–≤—ã–µ –ø—Ç–∏—Ü—ã —Å –±–æ–ª—å—à–∏–º–∏ –ª–∏—á–Ω–æ—Å—Ç—è–º–∏. –û–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–≤–æ–ª—å–Ω–æ –≥—Ä–æ–º–∫–∏–º–∏ –∏ —Ç—Ä–µ–±—É—é—Ç –æ–ø—ã—Ç–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤.",
    "Extremely intelligent birds that require experienced owners and consistent mental stimulation.": "–ß—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ —É–º–Ω—ã–µ –ø—Ç–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—Ä–µ–±—É—é—Ç –æ–ø—ã—Ç–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —É–º—Å—Ç–≤–µ–Ω–Ω–æ–π —Å—Ç–∏–º—É–ª—è—Ü–∏–∏.",
    
    # È´òÁ∫ßËßÖÈ£üÊåëÊàò
    'Advanced Foraging Challenges:': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤—ã–∑–æ–≤—ã –ø–æ–∏—Å–∫–∞ –ø–∏—â–∏:',
    'Multi-level puzzle feeders': '–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–µ –∫–æ—Ä–º—É—à–∫–∏-–≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏',
    'Large Birds (Macaws, African Greys):': '–ö—Ä—É–ø–Ω—ã–µ –ø—Ç–∏—Ü—ã (–∞—Ä–∞, –∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ —Å–µ—Ä—ã–µ):',
    'Advanced problem-solving puzzles': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º',
    'Large foraging opportunities': '–ë–æ–ª—å—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∏—â–∏',
    
    # ÊèêÁ§∫ÂÜÖÂÆπ
    'Focus on size and shape first, notice behavior patterns, listen to sounds, use size comparisons, and always take notes of what you observe.': '–°–Ω–∞—á–∞–ª–∞ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ —Ä–∞–∑–º–µ—Ä–µ –∏ —Ñ–æ—Ä–º–µ, –∑–∞–º–µ—á–∞–π—Ç–µ –ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã, —Å–ª—É—à–∞–π—Ç–µ –∑–≤—É–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –≤—Å–µ–≥–¥–∞ –¥–µ–ª–∞–π—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –æ —Ç–æ–º, —á—Ç–æ –Ω–∞–±–ª—é–¥–∞–µ—Ç–µ.',
}

def translate_file(file_path):
    """ÁøªËØëÂçï‰∏™Êñá‰ª∂"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        
        # Â∫îÁî®ÊâÄÊúâÁøªËØë
        for english, russian in FINAL_TRANSLATIONS.items():
            content = content.replace(english, russian)
        
        # Â¶ÇÊûúÂÜÖÂÆπÊúâÂèòÂåñÔºåÂÜôÂõûÊñá‰ª∂
        if content != original_content:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"‚úÖ ÁøªËØëÂÆåÊàê: {file_path}")
            return True
        else:
            print(f"‚è≠Ô∏è  Êó†ÈúÄÁøªËØë: {file_path}")
            return False
            
    except Exception as e:
        print(f"‚ùå ÁøªËØëÂ§±Ë¥• {file_path}: {e}")
        return False

def main():
    """‰∏ªÂáΩÊï∞"""
    ru_dir = Path('ru')
    
    if not ru_dir.exists():
        print("‚ùå ruÁõÆÂΩï‰∏çÂ≠òÂú®")
        return
    
    print("üöÄ ÂºÄÂßãÊúÄÁªà‰øÑËØ≠ÁøªËØë...")
    
    # Êü•ÊâæÊâÄÊúâHTMLÊñá‰ª∂
    html_files = list(ru_dir.rglob('*.html'))
    
    translated_count = 0
    total_files = len(html_files)
    
    for file_path in html_files:
        if translate_file(file_path):
            translated_count += 1
    
    print(f"\nüìä ÁøªËØëÁªüËÆ°:")
    print(f"   ÊÄªÊñá‰ª∂Êï∞: {total_files}")
    print(f"   Â∑≤ÁøªËØë: {translated_count}")
    print(f"   Êó†ÈúÄÁøªËØë: {total_files - translated_count}")
    print("üéâ ÊúÄÁªà‰øÑËØ≠ÁøªËØëÂÆåÊàê!")

if __name__ == "__main__":
    main()